React JS

what is reactjs?
React Js is a client-side javascript library used to create modern reactive User interface.

React js is spliting your application into small components where every component has it's own task and therefore the code remains maintainable and the react does the task of rendering that components on screen.

It follows declarative and component focused approach.

Why components?

Reuseability.
Speration of concerns.

How is component built?

combination of html,css and js

Understanding JSX

it stands for Javascript xml
It allows to use html in javascript code and vise versa 
 
Babel: 
-it converts latest version of js to lower version of js like ES5.
-it can also compile JSX code to JS code.

Webpack:
it goes through tree traverses through it


component --> build with JSX returning object
kept in virtual dom


How react works?

To understand the working of react we must know about following concepts:
1. Virtual DOM
2. Diffing 
3. Reconciliation

Virtual Dom is the copy of Real DOM which is kept in memory. Virtual DOM is same as Real Dom and it has same properties as of Real Dom but it lacks the power 
of changing the content of the screen directly.

Virtual Dom is kept in sync with Real DOM using React libraries such as ReactDOM and this process is known as reconciliation.

Whenever there is change in virtual dom, react compares the pre updated virtual dom to updated virtual dom and find which element are changed.
By doing this comparision react figures out which components need to be updated and this process is called diffing. And the algorithm used is known as
diffing algorithm.

to avoid unnecessary rerenders react uses the concept of key.

This process of comparing the current Virtual DOM tree with the previous one is known as ‘diffing’. 

React uses something called batch updates to update the real DOM. 
It just means that the changes to the real DOM are sent in batches instead of sending any update for a single change in the state of a component. 

We have seen that the re-rendering of the UI is the most expensive part and React manages to do this most efficiently by ensuring that the Real DOM receives batch updates to re-render the UI. This entire process of transforming changes to the real DOM is called Reconciliation

Components

Elements are the smallest building block of react app. They are plain object.

elements are what components are madeup of.


ReactDom

ReactDom is the package that provide methods that can be used at the top level of a web app to enable an efficient way of managing DOM elements of the webpage. 

Some methods of reactDom 

1. Render(): 
	This function is used to render a single react component or group of components or several components wrapped together. It uses efficient rendering method to render subtree.

	it takes three parameters
	1. element: This parameter expects a JSX expression or a React Element to be rendered.
	2. container: This parameter expects the container in which the element has to be rendered.
	3. callback: This is an optional parameter that expects a function that is to be executed once the render is complete.

	Return Type: This function returns a reference to the component or null if a stateless component was rendered. 

2. findDOMNode(): 
	This function is used to get the DOM node where the component was rendered

3. unmountComponentAtNode():
	This function is used to unmount or remove the React Component that was rendered to a particular container.
	
	
4. hydrate(): 
	This method is equivalent to the render() method but is implemented while using server-side rendering. 
		
5. createPortal():
	 Portals allow us to render a component into a DOM node that resides outside the current DOM hierarchy of the parent component.
	 Parameters: This method takes two parameters as described below.  

		child: This parameter expects a JSX expression or a React Component to be rendered.
		container: This parameter expects the container in which the element has to be rendered. 
	Return Type: This function returns nothing. 
	

